
@{
    ViewBag.Title = "Идентификация лиц в ЦС";

    var isAdmin = User.IsInRole("Admin");
}

@section Lib
{
    <script src="~/lib/jquery.maskedinput/jquery.maskedinput.min.js"></script>
    <script src="~/lib/Select2/select2.min.js"></script>

    <script src="~/lib/angularJS/angular.min.js"></script>
    <script src="~/lib/angularJS/angular-touch.min.js"></script>
    <script src="~/lib/angularJS/angular-animate.min.js"></script>
    <script src="~/lib/angularJS/angular-aria.min.js"></script>
    <script src="~/lib/angularJS/angular.min.js"></script>


    <script src="~/lib/angular-ui-grid/ui-grid.min.js"></script>
    <script src="~/lib/angular-ui-grid/ui-grid.core.min.js"></script>
    <script src="~/lib/angular-ui-grid/ui-grid.pagination.min.js"></script>
    <script src="~/lib/angular-ui-grid/ui-grid.cellnav.min.js"></script>
    <script src="~/lib/angular-ui-grid/ui-grid.selection.min.js"></script>
    <script src="~/lib/angular-ui-grid/i18n/ui-grid.language.ru.min.js"></script>
    <script src="~/lib/angular-ui-grid/ui-grid.resize-columns.min.js"></script>
    <script src="~/lib/grid-msg-loader/grid-msg-loader.js"></script>
    <script src="~/lib/ContextMenu/contextMenu.js"></script>
    <script src="~/lib/ContextMenu/ui-bootstrap-tpls-2.5.0.js"></script>
    
    <script src="~/lib/signalr/signalr.min.js"></script>
}

@section Style
{

    <link href="~/css/ModalWindow.css" rel="stylesheet" />
    <link href="~/lib/Select2/select2.min.css" rel="stylesheet" />
    <link href="~/css/lds-hourglass-loader.css" rel="stylesheet" />
    <link href="~/lib/angular-ui-grid/ui-grid.min.css" rel="stylesheet" />
    <link href="~/lib/grid-msg-loader/grid-msg-loader.css" rel="stylesheet" />
    <link href="~/lib/ContextMenu/ContextMenu.css" rel="stylesheet" />
    <link href="~/css/ToolBarMenu.css" rel="stylesheet" />
    <link href="~/css/ui-gridCustomStyle.css" rel="stylesheet" />
}


<style>
    .ServiceStatus {
        border: 2px solid green;
        border-radius: 8px;
    }

        .ServiceStatus legend {
            font-weight: bold;
        }

        .ServiceStatus .reload {
            text-align: right;
        }

            .ServiceStatus .reload span {
                font-family: Lucida Sans Unicode;
                cursor: pointer;
                font-weight: bold;
                font-size: 20px;
                color: green;
            }

    .uiGrd {
        height: 35vh;
        width: auto;
        font: 15px Times New Roman;
    }
</style>


<div id="myModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">&times;</span>
        </div>
        <div class="modal-body">
            <div id="ModalAjaxContent"></div>
        </div>
    </div>
</div>


<div ng-app="myApp" ng-controller="Grid1 as $GRID1" id="GRID1">
    <div class="div-space-between">
        <div>
            <h3>Поиск страховой принадлежности лиц в Центральном сегменте единого регистра застрахованных</h3><br />
            <button class="ActionButton" ng-click="ShowInstruction()">Инструкция пользователя</button>
        </div>
        <div>
            <fieldset class="ServiceStatus">
                <legend>Доступность сервиса</legend>
                <div class="reload">
                    <span ng-click="CheckServiceAv()" title="Обновить статус">&#x21bb;</span>
                </div>
                <div ng-switch on="IsCheckServiceAv">
                    <span class="GreenText BoldText" ng-switch-when="true">Сервис доступен</span>
                    <span class="RedText BoldText" ng-switch-when="false">Сервис не доступен</span>
                    <span class="BoldText" ng-switch-when="null">Запрос данных</span>
                </div>

                <p />
                @if (isAdmin)
                {
                    <button class="ActionButton" ng-click="GetServiceLog()">Посмотреть лог </button>
                }
            </fieldset>
        </div>
    </div>
    <p />
    <div>
        <div ui-i18n="{{Grid1.lang}}">
            <span>Доступные списки:</span>
            <div class="uiGrd" ui-grid="gridOptions" ui-grid-pagination ui-grid-selection ui-grid-resize-columns ui-grid-loader>
            </div>
        </div>
    </div>
    <p />
    <div>
        <div ng-controller="Grid2 as $GRID2" id="GRID2">
            <div ui-i18n="{{$GRID2.lang}}">
                <span>Текущий список: <span class="BoldText">{{currentCSListItem==null? "=Список не выбран=" : currentCSListItem.CAPTION}}</span><span class="TextCursiv">{{currentCSListItem==null? "(Выбор осуществляется двойным щелчком мыши)" : ""}}</span>   </span>
                <div class="uiGrd" ui-grid="gridOptions" ui-grid-pagination ui-grid-selection ui-grid-resize-columns ui-grid-loader>
                </div>
            </div>
        </div>

    </div>
</div>


@section Scripts
{

    <script asp-append-version="true" src="~/js/AngularJSApp/AppCreateCSList.js"></script>
    
    <script>
        var modal = document.getElementById("myModal");
        var span = document.getElementsByClassName("close")[0];
        var ModalAjaxContent = document.getElementById("ModalAjaxContent");
        span.onclick = closeMyModal;

        function closeMyModal(result) {
            modal.style.display = "none";
            ModalAjaxContent.innerHTML = '';
        }
        function showModal() {
            modal.style.display = "block";
        }

        function refreshListCS() {
            const sc = angular.element(document.getElementById('GRID1')).scope();
            sc.getPage();
        }

        function refreshListCS_IN() {
            const sc = angular.element(document.getElementById('GRID2')).scope();
            sc.getPage();
        }
    </script>

    <script>

        const Notification = new signalR.HubConnectionBuilder().withUrl(" /Notification").build();
        Notification.on("NewListState",
            function (ID) {
            const sc = angular.element(document.getElementById('GRID1')).scope();
            sc.CheckStatusByID(ID);
            });

        Notification.start().catch(err =>
            console.error(err.toString())).then(() => { Notification.invoke('Register').catch(err => console.error(err.toString())); });
     
    </script>
}

